// Default direct antenna to command modules
@PART[*]:HAS[@MODULE[ModuleCommand]]:Final
{
	@mass += 0.015
	@cost += 300
	
	%MODULE[ModuleDataTransmitter]
	{
		%antennaType = DIRECT
		%packetInterval = 0.6
		%packetSize = 2
		%packetResourceCost = 12.0
		%requiredResource = ElectricCharge
		%antennaPower = 500000
		%antennaCombinable = False
	}

	@RESOURCE[MonoPropellant]
	{
		@amount = 0
	}
}

// Surface attachable decouplers/separatrons
@PART[*]:HAS[@MODULE[ModuleDecouple]]:Final
{
    @attachRules = 1,1,1,1,0
}

// Surface attachable isru converters
@PART[*ISRU]:FOR[KKL]
{
    @attachRules = 1,1,1,1,0
}

// Surface attachable xenon tanks
@PART[xenonTank*]:FOR[KKL]
{
    @attachRules = 1,1,1,1,0
}

// Mechjeb for all
@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[MechJeb2]:Final
{
	%MODULE[MechJebCore]
	{
		%MechJebLocalSettings
		{
			%MechJebModuleCustomWindowEditor { unlockTechs = start }
			%MechJebModuleSmartASS { unlockTechs = start }
			%MechJebModuleManeuverPlanner { unlockTechs = start }
			%MechJebModuleNodeEditor { unlockTechs = start }
			%MechJebModuleTranslatron { unlockTechs = start }
			%MechJebModuleWarpHelper { unlockTechs = start }
			%MechJebModuleAttitudeAdjustment { unlockTechs = start }
			%MechJebModuleThrustWindow { unlockTechs = start }
			%MechJebModuleRCSBalancerWindow { unlockTechs = start }
			%MechJebModuleRoverWindow { unlockTechs = start }
			%MechJebModuleAscentGuidance { unlockTechs = start }
			%MechJebModuleLandingGuidance { unlockTechs = start }
			%MechJebModuleSpaceplaneGuidance { unlockTechs = start }
			%MechJebModuleDockingGuidance { unlockTechs = start }
			%MechJebModuleRendezvousAutopilotWindow { unlockTechs = start }
			%MechJebModuleRendezvousGuidance { unlockTechs = start }
		}
	}
}

// kOS for all
@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[kOS]:Final
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 10000000
	}
}

// Snap dock
@PART[*]:HAS[@MODULE[ModuleDockingNode]]:Final
{
	@MODULE[ModuleDockingNode]
	{
		captureMinRollDot = 0.98
		snapRotation = true		
		snapOffset = 5
	}
}

// Off stage
@PART[*]:HAS[@MODULE[ModuleParachute]]:Final
{
	@MODULE[ModuleParachute]
	{
		stagingEnableText = Parachute: Enable Staging
		stagingDisableText = Parachute: Disable Staging
		stagingToggleEnabledEditor = true
	}
}

@PART[*]:HAS[@MODULE[ModuleEngines*]]:Final
{
	@MODULE[ModuleEngines*],*
	{
		stagingEnableText = Engine: Enable Staging
		stagingDisableText = Engine: Disable Staging
		stagingToggleEnabledEditor = true
	}
	
	@MODULE[ModuleJettison],*
	{
		stagingEnabled = False
	}
}

@PART[*]:HAS[@MODULE[ModuleProceduralFairing]]:Final
{
	@MODULE[ModuleProceduralFairing]
	{
		stagingEnableText = Fairing: Enable Staging
		stagingDisableText = Fairing: Disable Staging
		stagingToggleEnabledEditor = true
	}
}

@PART[*]:HAS[@MODULE[LaunchClamp]]:Final
{
	@MODULE[LaunchClamp]
	{
		stagingEnableText = Clamp: Enable Staging
		stagingDisableText = Clamp: Disable Staging
		stagingToggleEnabledEditor = true
	}
}

@PART[*]:HAS[@MODULE[ModuleDecouple]]:Final
{
	@MODULE[ModuleDecouple]
	{
		stagingEnableText = Decoupler: Enable Staging
		stagingDisableText = Decoupler: Disable Staging
		stagingToggleEnabledEditor = true
	}
}

// Small amount (100kg) of ore per radial drill
@PART[RadialDrill]:Final
{
	RESOURCE
	{
		name = Ore
		amount = 0
		maxAmount = 10
	}
}

// Shock intake to take a bit more heat (they get toast while rest of the spaceplane remains intact)
@PART[shockConeIntake]:Final
{
	@maxTemp += 600
}
